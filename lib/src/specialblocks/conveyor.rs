use once_cell::sync::Lazy;

use crate::specialblocks::vertexutils::rotate_coordinates_around_y_negative_90;







pub struct ConveyorInfo {
    
}


impl ConveyorInfo {



    pub fn conveyor_model_from_index(index: usize) -> &'static Vec<f32> {
        static MODELS: Lazy<Vec<Vec<f32>>> = Lazy::new(|| {
            vec![
                ConveyorInfo::base_conveyor_model().to_vec(),
                rotate_coordinates_around_y_negative_90(ConveyorInfo::base_conveyor_model(), 1),
                rotate_coordinates_around_y_negative_90(ConveyorInfo::base_conveyor_model(), 2),
                rotate_coordinates_around_y_negative_90(ConveyorInfo::base_conveyor_model(), 3)
            ]
        });
        &(*MODELS)[index]
    }

    pub fn get_conveyor_uvs() -> Vec<f32> {

        let uvs = vec![
            0.39694494009017944, 0.8014513254165649, 0.0, 0.0,
            0.363957941532135, 0.7684643119573593, 0.0, 0.0,
            0.363957941532135, 0.8014513254165649, 0.0, 0.0,
            0.396533727645874, 0.8012476712465286, 0.0, 0.0,
            0.3636927008628845, 0.7684066295623779, 0.0, 0.0,
            0.3636927008628845, 0.8012476712465286, 0.0, 0.0,

            0.3640400469303131, 0.8014210015535355, 0.0, 0.0,
            0.39700496196746826, 0.768435463309288, 0.0, 0.0,
            0.36405080556869507, 0.7685472071170807, 0.0, 0.0,
            0.3970326781272888, 0.8014704585075378, 0.0, 0.0,
            0.3639705777168274, 0.7684083580970764, 0.0, 0.0,
            0.3639705777168274, 0.8014704585075378, 0.0, 0.0,

            0.39675188064575195, 0.8011389374732971, 0.0, 0.0,
            0.3639797270298004, 0.7683667987585068, 0.0, 0.0,
            0.3639797270298004, 0.8011389374732971, 0.0, 0.0,
            0.36396199464797974, 0.8014305830001831, 0.0, 0.0,
            0.33097711205482483, 0.768445685505867, 0.0, 0.0,
            0.33097711205482483, 0.8014305830001831, 0.0, 0.0,

            0.39694494009017944, 0.8014513254165649, 0.0, 0.0,
            0.39694494009017944, 0.7684643119573593, 0.0, 0.0,
            0.363957941532135, 0.7684643119573593, 0.0, 0.0,
            0.396533727645874, 0.8012476712465286, 0.0, 0.0,
            0.396533727645874, 0.7684066295623779, 0.0, 0.0,
            0.3636927008628845, 0.7684066295623779, 0.0, 0.0,

            0.3640400469303131, 0.8014210015535355, 0.0, 0.0,
            0.3969941735267639, 0.8014917075634003, 0.0, 0.0,
            0.39700496196746826, 0.768435463309288, 0.0, 0.0,
            0.3970326781272888, 0.8014704585075378, 0.0, 0.0,
            0.3970326781272888, 0.7684083580970764, 0.0, 0.0,
            0.3639705777168274, 0.7684083580970764, 0.0, 0.0,
            
            0.39675188064575195, 0.8011389374732971, 0.0, 0.0,
            0.39675188064575195, 0.7683667987585068, 0.0, 0.0,
            0.3639797270298004, 0.7683667987585068, 0.0, 0.0,
            0.36396199464797974, 0.8014305830001831, 0.0, 0.0,
            0.36396199464797974, 0.768445685505867, 0.0, 0.0,
            0.33097711205482483, 0.768445685505867, 0.0, 0.0,
        ];
        uvs
    }

    pub fn base_conveyor_model() -> &'static [f32] {
        static PLAYER_IS_MINUS_Z: [f32; 180] = [
            0.0, 1.0, 0.0, 0.0, 14.0,
            0.0, 0.0, 1.0, 0.0, 14.0,
            0.0, 0.0, 0.0, 0.0, 14.0,
            0.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 0.0, 1.0, 0.0, 14.0,
            0.0, 0.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 0.0, 0.0, 0.0, 14.0,
            1.0, 0.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 0.0, 0.0, 14.0,
            0.0, 0.0, 0.0, 0.0, 14.0,
            1.0, 0.0, 0.0, 0.0, 14.0,
            1.0, 0.0, 1.0, 0.0, 14.0,
            0.0, 0.0, 0.0, 0.0, 14.0,
            0.0, 0.0, 1.0, 0.0, 14.0,
            0.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 0.0, 0.0, 14.0,
            1.0, 1.0, 1.0, 0.0, 14.0,
            0.0, 1.0, 0.0, 0.0, 14.0,
            0.0, 1.0, 1.0, 0.0, 14.0,
            0.0, 0.0, 1.0, 0.0, 14.0,
            0.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 0.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 1.0, 0.0, 14.0,
            1.0, 1.0, 0.0, 0.0, 14.0,
            1.0, 0.0, 0.0, 0.0, 14.0,
            1.0, 1.0, 0.0, 0.0, 14.0,
            0.0, 1.0, 0.0, 0.0, 14.0,
            0.0, 0.0, 0.0, 0.0, 14.0,
            1.0, 0.0, 1.0, 0.0, 14.0,
            1.0, 0.0, 0.0, 0.0, 14.0,
            0.0, 0.0, 0.0, 0.0, 14.0,
            0.0, 1.0, 1.0, 0.0, 14.0,
            0.0, 1.0, 0.0, 0.0, 14.0,
            1.0, 1.0, 0.0, 0.0, 14.0,

        ];
        &PLAYER_IS_MINUS_Z
    }
    
}